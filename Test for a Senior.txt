Создать тестовый nginx server с деплоем измений по пушу кода в мастер ветку github
=====================================
Развернуть Nginx контецнер на  EC2 инстансе
Cборку осуществлять с помощью jenkins через Jenkinsfile
Этапы сборки Jenkinsfile:
  Build
    Cборка последней версии nginx сервера c lua-nginx-module
  Dockerize
      Сборка докер контейнера с добавленим в образ nginx.conf и index.html файлов из репозитория github
      Публикация докер образа в публичный докер репозиторий
  Deploy
    Разворачивание на EC2 инстансе через docker-machine

Jenkinsfile:
pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building..'
		git clone https://github.com/danday74/docker-nginx-lua.git
		cd docker-nginx-lua/
		sudo docker build -t "dadday74/nginx-lua" .
		export DOCKER_ID_USER="etyatin"
		sudo docker login
		docker tag my_image $DOCKER_ID_USER/my_image
		docker push $DOCKER_ID_USER/my_image
		docker-machine create --driver amazonec2 --amazonec2-open-port 8000 --amazonec2-region us-west-1 aws-sandbox
		git url: 'https://github.com/etyatin/docker.git'
		commitChangeset = sh(returnStdout: true, script: 'git diff-tree --no-commit-id --name-status -r HEAD').trim()
		withCredentials([usernamePassword(credentialsId: 'git-pass-credentials-ID', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
    sh("git tag -a some_tag -m 'Jenkins'")
    sh('git push https://${GIT_USERNAME}:${GIT_PASSWORD}@<REPO> --tags')
		
		
		

            }
        }
        stage('Test') {
            steps {
                echo 'Testing..'
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying....'
            }
        }
    }
}

Код разместить в github
Запуск пересборки осуществлять по пушу кода в мастер ветку репозитория
Спасибо.
